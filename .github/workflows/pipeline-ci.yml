
name: CI Security

on:
  workflow_call:
permissions:
  security-events: write
  packages: read
  actions: read
  contents: read
jobs:
  
  SAST:
    runs-on: ubuntu-latest
    name: Static Application Security Testing
    steps:   
    
      - name: Git Clone
        uses: actions/checkout@v4
      
      - name: Set Up JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java-kotlin
          build-mode: none
          queries: security-and-quality
    
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java-kotlin"
          
      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          token: ${{ secrets.GH_TOKEN }}
          status: ${{ job.status }}
          context: Security Testing
          sha: ${{ github.sha }}
 
  SCA:
    needs: SAST
    name: Software Composition Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Git Clone
        uses: actions/checkout@v4
        
      - name: Build
        run: |
          mvn package
          
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        with:
          project: 'ms-aumento-voto'
          path: '.'
          format: 'HTML'   
          
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
                    
  Docker-build:
    name: Build Docker Image
    needs: 
      - SAST
      - SCA
    runs-on: ubuntu-latest
    steps:
    
      - name: Docker Auth
        run: |
          echo "Docker login"

      - name: Docker Config
        uses: docker/setup-buildx-action@v3
      
      - name: Construccion Imagen
        run: | 
          #docker build -t clagosu/ms-aumento-voto:latest .
          echo "Docker build"

  Container-Analysis:
    name: Container Vulnerability Analysis
    needs: Docker-build
    runs-on: ubuntu-latest
    steps:
    
      - name: Vulnerability Analysis
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: 'clagosu/ms-aumento-voto:latest'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          
  Docker-push:
    needs: 
      - Container-Analysis
    runs-on: ubuntu-latest
    steps:
    
      - name: Docker push
        run: |
          echo "Docker push"
  
